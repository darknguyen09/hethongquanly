#ifndef USER_H
#define USER_H

#include <string>
#include <vector>
#include "wallet.h"

class User {
public:
    std::string username;
    std::string password;
    std::string fullName;
    std::string email;
    std::string phone;
    std::string role;
    std::string walletID;
    bool isAutoGeneratedPassword;
    std::string oathSecretKey;

    User(std::string u, std::string p, std::string f, std::string e, std::string ph, std::string r, std::string w, std::string oathKey, bool autoGen = false);
};

std::string bytesToHexString(const unsigned char* bytes, size_t len);
std::string generateRandomPassword(int length);
std::string generateOATHSecretKey(int length = 16);
std::string hashPassword(const std::string& password);
std::string generateSimulatedOTP();
bool verifyOTP(const std::string& secretKey, const std::string& userOtp);

void saveUsers(const std::vector<User>& users, const std::string& relativeFilename);
std::vector<User> loadUsers(const std::string& relativeFilename);

User registerUser(std::vector<User>& users, bool isAdminRegistration = false);
User* login(std::vector<User>& users);
void changePassword(User& user, std::vector<User>& users);
void updateProfile(User& user, std::vector<User>& users);
void viewUsers(const std::vector<User>& users);
void adminEditUser(std::vector<User>& users);

#endif
